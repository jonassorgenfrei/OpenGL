OLD LIGHTNING
/*
	// Ambient Lightning 
	vec3 ambient = light.ambient * texture(material.diffuse, TexCoords).rgb;

	// Diffuse lightning
	
	vec3 lightDir = normalize(light.position - FragPos);
	float diff = max(dot(norm, lightDir), 0.0);
	vec3 diffuse = light.diffuse * diff * texture(material.diffuse, TexCoords).rgb;  
	
	// Specular Lightning
	
	vec3 reflectDir = reflect(-lightDir, norm);
	float spec = pow(max(dot(viewDir, reflectDir), 0.0), material.shininess);
	vec3 specular = light.specular * spec * texture(material.specular, TexCoords).rgb;

	// spotlight (soft edges)
	float theta = dot(lightDir, normalize(-light.direction));
	float epsilon = (light.cutOff - light.outerCutOff);
	float intensity = clamp((theta - light.outerCutOff) / epsilon, 0.0, 1.0);

	diffuse *= intensity;
	specular *= intensity;

	// Attenuation
	float distance = length(light.position - FragPos);
	float attenuation = 1.0 / (light.constant + light.linear * distance + light.quadratic * (distance *distance));
	
	// emission
	vec3 emission = texture(material.emission, TexCoords).rgb;
	emission = vec3(0.0);
	vec3 result = attenuation*(ambient + diffuse + specular) + emission;	*/
